apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    defaultConfig {
        applicationId "com.eneo.ocr"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 2
        versionName '1.0.1'
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_TOOLCHAIN=clang'
            }
        }
    }
    /* applicationVariants.all { variant ->
         variant.outputs.each { output ->
             output.processManifest.doLast {
                 def manifestOutFile = output.processManifest.manifestOutputFile
                 def xml = new XmlParser().parse(manifestOutFile)
                 def usesSdk = xml.'uses-sdk'

                 usesSdk.replaceNode{
                     'uses-sdk'('android:minSdkVersion': '15',
                             'android:targetSdkVersion': '15')
                 }

                 def fw=new FileWriter(manifestOutFile.toString())

                 new XmlNodePrinter(new PrintWriter(fw)).print(xml)
             }
         }
     }*/
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        arm7 {
            // in the future, ndk.abiFilter might also work
            ndk {
                abiFilter 'armeabi-v7a'
            }
        }
        arm8 {
            ndk {
                abiFilters 'arm64-v8a'
            }
        }
        arm {
            ndk {
                abiFilter 'armeabi'
            }
        }
        x86 {
            ndk {
                abiFilter 'x86'
            }
        }
        x86_64 {
            ndk {
                abiFilter 'x86_64'
            }
        }
        mips {
            ndk {
                abiFilters 'mips', 'mips64'
            }
        }
        universal {
            ndk {
                abiFilters 'mips', 'mips64', 'x86', 'x86_64'
            }
        }
    }
    externalNativeBuild {
        /*cmake {
            path 'CMakeLists.txt'
        }*/
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
}

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.google.android.gms:play-services-vision:9.2.0'
    compile 'com.android.support:design:23.1.1'
    compile 'org.java-websocket:Java-WebSocket:1.3.0'
    //    compile 'com.google.android.gms:play-services-vision:9.0.0+'
    /*compile 'org.osmdroid:osmdroid-android:5.2@aar'
            compile 'org.osmdroid:osmdroid-third-party:5.0.1@aar'*/
    compile 'com.github.gabrielemariotti.cards:cardslib-core:2.1.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.android.volley:volley:1.0.0'
    compile 'org.litepal.android:core:1.3.2'
    compile 'com.google.android.gms:play-services-location:9.2.0'
    //    compile project(':usb-serial-for-android:usbSerialForAndroid')
    compile 'com.github.paolorotolo:appintro:4.0.0'
    compile 'io.nlopez.smartlocation:library:3.2.1'
    compile 'com.akexorcist:bluetoothspp:1.0.0'
    compile 'de.hdodenhof:circleimageview:2.1.0'
//    compile 'com.cesards.android:cropimageview:1.0.2.1'
    compile 'com.soundcloud.android:android-crop:1.0.1@aar'
    compile 'com.github.yalantis:ucrop:2.2.1-native'
    compile 'com.github.developer-shivam:Diagonalify:1.1'
    compile project(':openCVLibrary310')
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha8'
}
